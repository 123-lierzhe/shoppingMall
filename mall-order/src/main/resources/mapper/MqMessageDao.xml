<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liez.order.dao.MqMessageDao">

    <resultMap type="com.liez.order.entity.MqMessage" id="MqMessageMap">
        <result property="messageId" column="message_id" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="toExchange" column="to_exchange" jdbcType="VARCHAR"/>
        <result property="classType" column="class_type" jdbcType="VARCHAR"/>
        <result property="messageStatus" column="message_status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MqMessageMap">
        select message_id,
               content,
               to_exchange,
               class_type,
               message_status,
               create_time,
               update_time
        from gulimall_oms.mq_message
        where message_id = #{messageId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MqMessageMap">
        select message_id,
               content,
               to_exchange,
               class_type,
               message_status,
               create_time,
               update_time
        from gulimall_oms.mq_message limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="MqMessageMap">
        select
        message_id, content, to_exchange, class_type, message_status, create_time, update_time
        from gulimall_oms.mq_message
        <where>
            <if test="messageId != null and messageId != ''">
                and message_id = #{messageId}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="toExchange != null and toExchange != ''">
                and to_exchange = #{toExchange}
            </if>
            <if test="classType != null and classType != ''">
                and class_type = #{classType}
            </if>
            <if test="messageStatus != null">
                and message_status = #{messageStatus}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="messageId" useGeneratedKeys="true">
        insert into gulimall_oms.mq_message(content, to_exchange, class_type, message_status, create_time, update_time)
        values (#{content}, #{toExchange}, #{classType}, #{messageStatus}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="messageId" useGeneratedKeys="true">
        insert into gulimall_oms.mq_message(content, to_exchange, class_type, message_status, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.content}, #{entity.toExchange}, #{entity.classType}, #{entity.messageStatus},
            #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="messageId" useGeneratedKeys="true">
        insert into gulimall_oms.mq_message(content, to_exchange, class_type, message_status, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.content}, #{entity.toExchange}, #{entity.classType}, #{entity.messageStatus},
            #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        content = values(content) , to_exchange = values(to_exchange) , class_type = values(class_type) , message_status
        = values(message_status) , create_time = values(create_time) , update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update gulimall_oms.mq_message
        <set>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="toExchange != null and toExchange != ''">
                to_exchange = #{toExchange},
            </if>
            <if test="classType != null and classType != ''">
                class_type = #{classType},
            </if>
            <if test="messageStatus != null">
                message_status = #{messageStatus},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where message_id = #{messageId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from gulimall_oms.mq_message
        where message_id = #{messageId}
    </delete>

</mapper>

